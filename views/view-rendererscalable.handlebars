<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <link rel="stylesheet" type="text/css" href="/css/spx_renderpopups.css">

    <title>SPX - scalable renderer view</title>
    <script src="/js/anime.min.js"></script>
    <style>


        html,
        body {
            width: 100vw;
            height: 100vh;
            padding: 0;
            margin: 0;
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
        }

        *, *:before, *:after {
            box-sizing: inherit;
            margin: 0;
            padding: 0;
            user-select: none;
        }

        .renderer  {
            /* rendererscalable hardcoded to 1920x1080 data received {{width}}x{{height}}*/ 
            margin: 0;
            padding: 0;
            border: 0px;
            outline: 0px;
            width: {{width}};
            height: {{height}};
            ZZZwidth: 1920px;
            ZZZheight: 1080px;
            background-size: 10vw;
            transform-origin: top left;
            background-image: url('/img/checker60.png'); /* bgimage for local preview */
        }

        #message {
            width: 100%;
            height: 100%;
            z-index: 100;
            display: flex;
            color: orange;
            font-size: 2.0vw;
            line-height: 1.5em;
            position: absolute;
            align-items: center;
            flex-direction: column;
            justify-content: center;
            text-shadow: 2px 2px 4px black;
            font-family: Arial, Helvetica, sans-serif;
        }

        .pale {
            color: #aaa;
        }

        #previewBG {
            display: flex;
            align-items: center;
            justify-content: center;
            border: 0px solid yellowgreen;
        }

        #previewIF {
            transform-origin: top left;
        }

    </style>
    <script src="/js/socket.io.js"></script>
    <script src="/js/view-rendererscalable.js"></script>
</head>
<!-- data attributes will be read by view-rendererscalable.js -->
<body data-width="{{width}}" data-height="{{height}}">

    {{#ifValue mode 'program'}}
      <div class="watermark prog"></div>
    {{/ifValue}}

    
    <div id="previewBG" style="overflow: hidden;">

        {{#ifValue mode 'preview'}}
            <iframe id="previewIF" src="/renderer?preview=true"  class="renderer"></iframe>
        {{else}}
            <iframe id="previewIF" src="/renderer"  class="renderer"></iframe>
        {{/ifValue}}
    </div>


</body>
</html>